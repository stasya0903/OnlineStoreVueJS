{"remainingRequest":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/App.vue","mtime":1582485666503},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}