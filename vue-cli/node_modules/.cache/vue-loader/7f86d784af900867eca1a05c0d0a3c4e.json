{"remainingRequest":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/components/cartItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/components/cartItem.vue","mtime":1582661155661},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiY2FydEl0ZW0iLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAgIGVycm9yOiIiLAogICAgICAgIG9sZFF0eTogdGhpcy5pdGVtLnF1YW50aXR5LAoKICAgIH0KICB9LAogIHByb3BzOiB7CiAgICBpdGVtOiBPYmplY3QKCiAgfSwKICBtZXRob2RzOiB7CgoKICB9LAogIGNvbXB1dGVkOnsKICAgIG5ld1F1YW50aXR5OnsKICAgICAgZ2V0KCl7CgogICAgICAgICAgcmV0dXJuICt0aGlzLml0ZW0ucXVhbnRpdHkKICAgICAgfSwKICAgICAgc2V0KHZhbCl7CiAgICAgICBpZiAoKHZhbCA9PT0gIiIpKXsKICAgICAgICAgIHRoaXMuZXJyb3IgPSAiIgogICAgICAgIH0KICAgICAgICBlbHNlIGlmKGlzTmFOKHZhbCkgfHwgdmFsIDw9IDAgfHwgdmFsID4gMTAwKXsKICAgICAgICAgIHRoaXMuZXJyb3IgPSAnaW5wdXQgY29ycmVjdCBhbW91bnQgb2YgdGhlIGl0ZW1zIGZyb20gMSB0byAxMDAnCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuZXJyb3IgPSAnJzsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZVF1YW50aXR5Jywge2l0ZW06IHRoaXMuaXRlbSwgdmFsfSk7CiAgICAgICAgfQoKICAgICAgfQoKICAgIH0KICB9LAogIG1vdW50ZWQ6IHsKICAgIHNldFF0eSgpewogICAgICB0aGlzLm9sZFF0eSA9IHRoaXMuaXRlbS5xdWFudGl0eQogICAgfQogIH0KCn0K"},{"version":3,"sources":["cartItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"cartItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <tr class=\"table_colums\">\n    <td class=\"table_choosen rows row_product\">\n\n      <div class=\"row_img\"><img src=\"img/img_row1.png\" alt=\"\"></div>\n      <div class=\"row_text\">\n        <a href=\"#\"><p class=\"row_text product_name\">Mango People T-shirt</p></a>\n\n        <p class=\"row_text color\"><span class=\"bold\">Color</span>: Red</p>\n        <p class=\"size\"><span class=\"bold\">Size</span>: Xll </p>\n      </div>\n    </td>\n    <td class=\"table_choosen rows row_prise\"> {{item.price}}</td>\n    <td class=\"table_choosen rows row_quantity\"><p class=\"pink\" v-show=\"error\">{{error}}</p><input type=\"number\"  min=\"1\" max=\"100\" v-model=\"newQuantity\"  @input=\"change/*$emit('changeQuantity', {item, newQuantity})*/\"  class=\"qty\" ></td>\n    <td class=\"table_choosen rows row_shipping\"> free</td>\n    <td class=\"table_choosen rows row_subtotal\">{{item.price * newQuantity}}</td>\n    <td class=\"table_choosen rows row_action\">\n      <font-awesome-icon @click=\"$emit('deleteItem', item)\" id=\"deleteBtn\" class=\"fas fa-times-circle btnPressEffect\" :icon=\"['fas', 'times-circle']\"/>\n      </td>\n  </tr>\n</template>\n\n<script>\n  export default {\n    name: \"cartItem\",\n    data() {\n      return {\n          error:\"\",\n          oldQty: this.item.quantity,\n\n      }\n    },\n    props: {\n      item: Object\n\n    },\n    methods: {\n\n\n    },\n    computed:{\n      newQuantity:{\n        get(){\n\n            return +this.item.quantity\n        },\n        set(val){\n         if ((val === \"\")){\n            this.error = \"\"\n          }\n          else if(isNaN(val) || val <= 0 || val > 100){\n            this.error = 'input correct amount of the items from 1 to 100'\n          } else {\n            this.error = '';\n            this.$emit('changeQuantity', {item: this.item, val});\n          }\n\n        }\n\n      }\n    },\n    mounted: {\n      setQty(){\n        this.oldQty = this.item.quantity\n      }\n    }\n\n  }\n</script>\n\n<style scoped>\n\n</style>"]}]}