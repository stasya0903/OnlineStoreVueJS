{"remainingRequest":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/babel-loader/lib/index.js!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js","dependencies":[{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js","mtime":1582595962264},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","api","products","itemsInBasket","allProducts","mutations","getItemsInBasket","data","contents","el","push","getAllProducts","deleteItemFromBasket","item","splice","indexOf","updateQuantityOfItem","args","find","id_product","quantity","addItemToBasket","actions","getJson","ctx","fetch","result","json","action","commit","deleteJson","method","headers","body","JSON","stringify","putJson","console","log","postJson","itemInCart","Object","assign","addProduct","dispatch","deleteItem","modules","getters","allItemsInBasket","amount","length","total","reduce","sum","price","featuredProducts","filter"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    api: `http://localhost:3030/api/`,\n    products: [],\n    itemsInBasket: [],\n    allProducts: [],\n\n  },\n  mutations: {\n    getItemsInBasket(state, data) {\n      for (let el of data.contents) {\n        state.itemsInBasket.push(el);\n      }\n    },\n    getAllProducts(state, data) {\n      for (let el of data) {\n        state.allProducts.push(el);\n      }\n    },\n    deleteItemFromBasket(state,item){\n      state.itemsInBasket.splice(state.itemsInBasket.indexOf(item), 1)\n    },\n    updateQuantityOfItem(state,args){\n      let find = state.itemsInBasket.find(el => el.id_product === args.id_product);\n      find.quantity += args.quantity;\n    },\n\n    addItemToBasket(state, item){\n      state.itemsInBasket.push(item);\n    }\n\n  },\n  actions: {\n    async getJson(ctx, args) {\n      const result = await fetch(args.api);\n      const data = await result.json();\n      switch (args.action) {\n        case \"getItemsInBasket\": ctx.commit('getItemsInBasket', data);\n        break;\n        case \"getAllProducts\": ctx.commit('getAllProducts', data);\n        break;\n\n      }\n\n    },\n    async deleteJson(ctx, args) {\n      const result = await fetch(args.api, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(args.item)\n      });\n      const data = await result.json();\n      if(data.result){\n        ctx.commit('deleteItemFromBasket', args.item)\n      }\n    },\n    async putJson(ctx, args) {\n      console.log(`${ctx.state.api}cart/${args.id_product}`);\n      console.log(args);\n      let body = {quantity: args.quantity};\n      const result = await fetch(`${ctx.state.api}cart/${args.id_product}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await result.json();\n      if(data.result){\n        ctx.commit('updateQuantityOfItem', args)\n      }\n    },\n    async postJson(ctx, item) {\n      let itemInCart = Object.assign({quantity: 1}, item);\n      const result = await fetch(`${ctx.state.api}cart`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(itemInCart)\n      });\n      const data = await result.json();\n      if(data.result){\n        ctx.commit('addItemToBasket', itemInCart)\n      }\n    },\n    addProduct(ctx, item){\n      console.log(item.id_product);\n      let  find = ctx.state.itemsInBasket.find( el => el.id_product === item.id_product);\n      if(find){\n        ctx.dispatch('putJson', { id_product: item.id_product, quantity: 1})\n      } else {\n        console.log(item);\n        ctx.dispatch('postJson', item)\n      }\n\n    },\n    deleteItem(ctx, item){\n      if (item.quantity <= 1) {\n        ctx.dispatch('deleteJson', {api: `${ctx.state.api}cart`, item: item});\n      }else {\n        //let  id_product = item.id_product;\n        ctx.dispatch('deleteJson', {api: `${ctx.state.api}cart`, item: item});\n        //this.putJson({api:this.api, id_product, quantity: -1});\n      }\n    },\n    /*postJson(url, item) {\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      })\n        .then(data => data.json())\n        .catch((error) => {\n            this.$root.$refs.error.handleError(error);\n          }\n        )\n\n    },\n    putJson(url, item) {\n      return fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      })\n        .then(data => data.json())\n        .catch((error) => {\n            this.$root.$refs.error.handleError(error);\n          }\n        )\n\n    },\n    deleteJson(url, item) {\n      return fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      })\n        .then(data => data.json())\n        .catch((error) => {\n            this.$root.$refs.error.handleError(error);\n          }\n        )\n\n    },*/\n  },\n  modules: {},\n  getters: {\n    allItemsInBasket(state) {\n      return state.itemsInBasket;\n    },\n    amount(state){\n      return state.itemsInBasket.length;\n    },\n    total(state){\n      return state.itemsInBasket.reduce((sum, el) => sum + el.price * el.quantity, 0);\n    },\n    allProducts(state){\n      return state.allProducts;\n    },\n    featuredProducts(state){\n      return state.allProducts.filter((el)=> el.id_product % 2 === 0)\n    },\n\n  }\n});\n"]}]}