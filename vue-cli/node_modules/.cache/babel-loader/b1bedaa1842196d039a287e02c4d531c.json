{"remainingRequest":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/babel-loader/lib/index.js!/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js","dependencies":[{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js","mtime":1582916899198},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9BbGVuYS9EZXNrdG9wL09ubGluZVN0b3JlVnVlSlMvdnVlLWNsaS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgYXBpOiAiaHR0cDovL2xvY2FsaG9zdDozMDMwL2FwaS8iLAogICAgcHJvZHVjdHM6IFtdLAogICAgaXRlbXNJbkJhc2tldDogW10KICB9LAogIG11dGF0aW9uczogewogICAgZ2V0SXRlbXNJbkJhc2tldDogZnVuY3Rpb24gZ2V0SXRlbXNJbkJhc2tldChzdGF0ZSwgZGF0YSkgewogICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7CgogICAgICB0cnkgewogICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGRhdGEuY29udGVudHNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7CiAgICAgICAgICB2YXIgZWwgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgIHN0YXRlLml0ZW1zSW5CYXNrZXQucHVzaChlbCk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfZGlkSXRlcmF0b3JFcnJvciA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiAmJiBfaXRlcmF0b3IucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHsKICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZ2V0QWxsUHJvZHVjdHM6IGZ1bmN0aW9uIGdldEFsbFByb2R1Y3RzKHN0YXRlLCBkYXRhKSB7CiAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7CiAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTsKICAgICAgdmFyIF9pdGVyYXRvckVycm9yMiA9IHVuZGVmaW5lZDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yMiA9IGRhdGFbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHsKICAgICAgICAgIHZhciBlbCA9IF9zdGVwMi52YWx1ZTsKICAgICAgICAgIHN0YXRlLnByb2R1Y3RzLnB1c2goZWwpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IyID0gdHJ1ZTsKICAgICAgICBfaXRlcmF0b3JFcnJvcjIgPSBlcnI7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgJiYgX2l0ZXJhdG9yMi5yZXR1cm4gIT0gbnVsbCkgewogICAgICAgICAgICBfaXRlcmF0b3IyLnJldHVybigpOwogICAgICAgICAgfQogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IyKSB7CiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBkZWxldGVJdGVtRnJvbUJhc2tldDogZnVuY3Rpb24gZGVsZXRlSXRlbUZyb21CYXNrZXQoc3RhdGUsIGl0ZW0pIHsKICAgICAgc3RhdGUuaXRlbXNJbkJhc2tldC5zcGxpY2Uoc3RhdGUuaXRlbXNJbkJhc2tldC5pbmRleE9mKGl0ZW0pLCAxKTsKICAgIH0sCiAgICB1cGRhdGVRdWFudGl0eU9mSXRlbTogZnVuY3Rpb24gdXBkYXRlUXVhbnRpdHlPZkl0ZW0oc3RhdGUsIGFyZ3MpIHsKICAgICAgdmFyIGZpbmQgPSBzdGF0ZS5pdGVtc0luQmFza2V0LmZpbmQoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgcmV0dXJuIGVsLmlkX3Byb2R1Y3QgPT09IGFyZ3MuaWRfcHJvZHVjdDsKICAgICAgfSk7CiAgICAgIGZpbmQucXVhbnRpdHkgKz0gYXJncy5xdWFudGl0eTsKICAgIH0sCiAgICBhZGRJdGVtVG9CYXNrZXQ6IGZ1bmN0aW9uIGFkZEl0ZW1Ub0Jhc2tldChzdGF0ZSwgaXRlbSkgewogICAgICBzdGF0ZS5pdGVtc0luQmFza2V0LnB1c2goaXRlbSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZXRKc29uOiBmdW5jdGlvbiBnZXRKc29uKGN0eCwgYXJncykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzdWx0LCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGFyZ3MuYXBpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBhcmdzLmFjdGlvbjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSBfY29udGV4dC50MCA9PT0gImdldEl0ZW1zSW5CYXNrZXQiID8gOSA6IF9jb250ZXh0LnQwID09PSAiZ2V0QWxsUHJvZHVjdHMiID8gMTEgOiAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBjdHguY29tbWl0KCdnZXRJdGVtc0luQmFza2V0JywgZGF0YSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDEzKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGN0eC5jb21taXQoJ2dldEFsbFByb2R1Y3RzJywgZGF0YSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDEzKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBkZWxldGVKc29uOiBmdW5jdGlvbiBkZWxldGVKc29uKGN0eCwgYXJncykgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3VsdCwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGFyZ3MuYXBpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGFyZ3MuaXRlbSkKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEucmVzdWx0KSB7CiAgICAgICAgICAgICAgICAgIGN0eC5jb21taXQoJ2RlbGV0ZUl0ZW1Gcm9tQmFza2V0JywgYXJncy5pdGVtKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcHV0SnNvbjogZnVuY3Rpb24gcHV0SnNvbihjdHgsIGFyZ3MpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBib2R5LCByZXN1bHQsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGJvZHkgPSB7CiAgICAgICAgICAgICAgICAgIHF1YW50aXR5OiBhcmdzLnF1YW50aXR5CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coYXJncy5xdWFudGl0eSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGN0eC5zdGF0ZS5hcGksICJjYXJ0LyIpLmNvbmNhdChhcmdzLmlkX3Byb2R1Y3QpLCB7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlc3VsdCkgewogICAgICAgICAgICAgICAgICBjdHguY29tbWl0KCd1cGRhdGVRdWFudGl0eU9mSXRlbScsIGFyZ3MpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBwb3N0SnNvbjogZnVuY3Rpb24gcG9zdEpzb24oY3R4LCBpdGVtSW5DYXJ0KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcmVzdWx0LCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KGN0eC5zdGF0ZS5hcGksICJjYXJ0IiksIHsKICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGl0ZW1JbkNhcnQpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0NC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChkYXRhLnJlc3VsdCkgewogICAgICAgICAgICAgICAgICBjdHguY29tbWl0KCdhZGRJdGVtVG9CYXNrZXQnLCBpdGVtSW5DYXJ0KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkUHJvZHVjdDogZnVuY3Rpb24gYWRkUHJvZHVjdChjdHgsIGFyZ3MpIHsKICAgICAgdmFyIGZpbmQgPSBjdHguc3RhdGUuaXRlbXNJbkJhc2tldC5maW5kKGZ1bmN0aW9uIChlbCkgewogICAgICAgIHJldHVybiBlbC5pZF9wcm9kdWN0ID09PSBhcmdzLml0ZW0uaWRfcHJvZHVjdDsKICAgICAgfSk7CgogICAgICBpZiAoZmluZCkgewogICAgICAgIGN0eC5kaXNwYXRjaCgncHV0SnNvbicsIHsKICAgICAgICAgIGlkX3Byb2R1Y3Q6IGFyZ3MuaXRlbS5pZF9wcm9kdWN0LAogICAgICAgICAgcXVhbnRpdHk6IGFyZ3MucXVhbnRpdHkKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgaXRlbUluQ2FydCA9IE9iamVjdC5hc3NpZ24oewogICAgICAgICAgcXVhbnRpdHk6IGFyZ3MucXVhbnRpdHkKICAgICAgICB9LCBhcmdzLml0ZW0pOwogICAgICAgIGN0eC5kaXNwYXRjaCgncG9zdEpzb24nLCBpdGVtSW5DYXJ0KTsKICAgICAgfQogICAgfSwKICAgIGRlbGV0ZUl0ZW06IGZ1bmN0aW9uIGRlbGV0ZUl0ZW0oY3R4LCBpdGVtKSB7CiAgICAgIGlmIChpdGVtLnF1YW50aXR5IDw9IDEpIHsKICAgICAgICBjdHguZGlzcGF0Y2goJ2RlbGV0ZUpzb24nLCB7CiAgICAgICAgICBhcGk6ICIiLmNvbmNhdChjdHguc3RhdGUuYXBpLCAiY2FydCIpLAogICAgICAgICAgaXRlbTogaXRlbQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGN0eC5kaXNwYXRjaCgncHV0SnNvbicsIHsKICAgICAgICAgIGlkX3Byb2R1Y3Q6IGl0ZW0uaWRfcHJvZHVjdCwKICAgICAgICAgIHF1YW50aXR5OiAtMQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgY2hhbmdlUXVhbnRpdHk6IGZ1bmN0aW9uIGNoYW5nZVF1YW50aXR5KGN0eCwgYXJncykgewogICAgICB2YXIgcXVhbnRpdHkgPSBhcmdzLnZhbCAtIGFyZ3MuaXRlbS5xdWFudGl0eTsKICAgICAgY3R4LmRpc3BhdGNoKCdwdXRKc29uJywgewogICAgICAgIGlkX3Byb2R1Y3Q6IGFyZ3MuaXRlbS5pZF9wcm9kdWN0LAogICAgICAgIHF1YW50aXR5OiBxdWFudGl0eQogICAgICB9KTsKICAgIH0sCiAgICBjbGVhckNhcnQ6IGZ1bmN0aW9uIGNsZWFyQ2FydChjdHgpIHsKICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZTsKICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yMyA9IGZhbHNlOwogICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IzID0gdW5kZWZpbmVkOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IzID0gY3R4LnN0YXRlLml0ZW1zSW5CYXNrZXRbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDM7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSAoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWUpIHsKICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgY3R4LmRpc3BhdGNoKCdkZWxldGVKc29uJywgewogICAgICAgICAgICBhcGk6ICIiLmNvbmNhdChjdHguc3RhdGUuYXBpLCAiY2FydCIpLAogICAgICAgICAgICBpdGVtOiBpdGVtCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9kaWRJdGVyYXRvckVycm9yMyA9IHRydWU7CiAgICAgICAgX2l0ZXJhdG9yRXJyb3IzID0gZXJyOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zICYmIF9pdGVyYXRvcjMucmV0dXJuICE9IG51bGwpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yMy5yZXR1cm4oKTsKICAgICAgICAgIH0KICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMykgewogICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjM7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBtb2R1bGVzOiB7fSwKICBnZXR0ZXJzOiB7CiAgICBhbGxJdGVtc0luQmFza2V0OiBmdW5jdGlvbiBhbGxJdGVtc0luQmFza2V0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pdGVtc0luQmFza2V0OwogICAgfSwKICAgIGFtb3VudDogZnVuY3Rpb24gYW1vdW50KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pdGVtc0luQmFza2V0Lmxlbmd0aDsKICAgIH0sCiAgICB0b3RhbDogZnVuY3Rpb24gdG90YWwoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLml0ZW1zSW5CYXNrZXQucmVkdWNlKGZ1bmN0aW9uIChzdW0sIGVsKSB7CiAgICAgICAgcmV0dXJuIHN1bSArIGVsLnByaWNlICogZWwucXVhbnRpdHk7CiAgICAgIH0sIDApOwogICAgfSwKICAgIGdldFByb2R1Y3RCeUlkOiBmdW5jdGlvbiBnZXRQcm9kdWN0QnlJZChzdGF0ZSkgewogICAgICByZXR1cm4gZnVuY3Rpb24gKGlkKSB7CiAgICAgICAgcmV0dXJuIHN0YXRlLnByb2R1Y3RzLmZpbmQoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICByZXR1cm4gZWwuaWRfcHJvZHVjdCA9PT0gaWQ7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICB9LAogICAgYWxsUHJvZHVjdHM6IGZ1bmN0aW9uIGFsbFByb2R1Y3RzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcm9kdWN0czsKICAgIH0sCiAgICBmZWF0dXJlZFByb2R1Y3RzOiBmdW5jdGlvbiBmZWF0dXJlZFByb2R1Y3RzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wcm9kdWN0cy5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgcmV0dXJuIGVsLmlkX3Byb2R1Y3QgJSAyID09PSAwOwogICAgICB9KTsKICAgIH0sCiAgICBtYXlMaWtlUHJvZHVjdHM6IGZ1bmN0aW9uIG1heUxpa2VQcm9kdWN0cyhzdGF0ZSkgewogICAgICB2YXIgcG9zaXRpb24xID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc3RhdGUucHJvZHVjdHMubGVuZ3RoKTsKICAgICAgdmFyIHBvc2l0aW9uMiA9IHBvc2l0aW9uMSArIDQ7CiAgICAgIHJldHVybiBzdGF0ZS5wcm9kdWN0cy5zbGljZShwb3NpdGlvbjEsIHBvc2l0aW9uMik7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/Users/Alena/Desktop/OnlineStoreVueJS/vue-cli/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","api","products","itemsInBasket","mutations","getItemsInBasket","data","contents","el","push","getAllProducts","deleteItemFromBasket","item","splice","indexOf","updateQuantityOfItem","args","find","id_product","quantity","addItemToBasket","actions","getJson","ctx","fetch","result","json","action","commit","deleteJson","method","headers","body","JSON","stringify","putJson","console","log","postJson","itemInCart","addProduct","dispatch","Object","assign","deleteItem","changeQuantity","val","clearCart","modules","getters","allItemsInBasket","amount","length","total","reduce","sum","price","getProductById","id","allProducts","featuredProducts","filter","mayLikeProducts","position1","Math","floor","random","position2","slice"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    api: `http://localhost:3030/api/`,\n    products: [],\n    itemsInBasket: [],\n\n\n  },\n  mutations: {\n    getItemsInBasket(state, data) {\n      for (let el of data.contents) {\n        state.itemsInBasket.push(el);\n      }\n    },\n    getAllProducts(state, data) {\n      for (let el of data) {\n        state.products.push(el);\n      }\n    },\n    deleteItemFromBasket(state, item) {\n      state.itemsInBasket.splice(state.itemsInBasket.indexOf(item), 1)\n    },\n    updateQuantityOfItem(state, args) {\n      let find = state.itemsInBasket.find(el => el.id_product === args.id_product);\n\n      find.quantity += args.quantity;\n\n\n    },\n\n    addItemToBasket(state, item) {\n      state.itemsInBasket.push(item);\n    }\n\n  },\n  actions: {\n    async getJson(ctx, args) {\n      const result = await fetch(args.api);\n      const data = await result.json();\n      switch (args.action) {\n        case \"getItemsInBasket\":\n          ctx.commit('getItemsInBasket', data);\n          break;\n        case \"getAllProducts\":\n          ctx.commit('getAllProducts', data);\n          break;\n\n      }\n\n    },\n    async deleteJson(ctx, args) {\n      const result = await fetch(args.api, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(args.item)\n      });\n      const data = await result.json();\n      if (data.result) {\n        ctx.commit('deleteItemFromBasket', args.item)\n      }\n    },\n    async putJson(ctx, args) {\n      let body = {quantity: args.quantity};\n      console.log(args.quantity);\n      const result = await fetch(`${ctx.state.api}cart/${args.id_product}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await result.json();\n      if (data.result) {\n        ctx.commit('updateQuantityOfItem', args)\n      }\n    },\n    async postJson(ctx, itemInCart) {\n      const result = await fetch(`${ctx.state.api}cart`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(itemInCart)\n      });\n      const data = await result.json();\n      if (data.result) {\n        ctx.commit('addItemToBasket', itemInCart)\n      }\n    },\n    addProduct(ctx, args) {\n      let find = ctx.state.itemsInBasket.find(el => el.id_product === args.item.id_product);\n      if (find) {\n        ctx.dispatch('putJson', {id_product: args.item.id_product, quantity: args.quantity})\n      } else {\n        let itemInCart = Object.assign({quantity: args.quantity}, args.item);\n        ctx.dispatch('postJson', itemInCart)\n      }\n\n    },\n    deleteItem(ctx, item) {\n      if (item.quantity <= 1) {\n        ctx.dispatch('deleteJson', {api: `${ctx.state.api}cart`, item: item});\n      } else {\n\n        ctx.dispatch('putJson', {id_product: item.id_product, quantity: -1})\n\n      }\n    },\n    changeQuantity(ctx, args) {\n      let quantity = args.val - args.item.quantity;\n\n      ctx.dispatch('putJson', {id_product: args.item.id_product, quantity})\n    },\n    clearCart(ctx) {\n      for (let item of ctx.state.itemsInBasket) {\n        ctx.dispatch('deleteJson', {api: `${ctx.state.api}cart`, item: item});\n      }\n    }\n  },\n  modules: {},\n  getters: {\n    allItemsInBasket(state) {\n      return state.itemsInBasket;\n    },\n    amount(state) {\n      return state.itemsInBasket.length;\n    },\n    total(state) {\n      return state.itemsInBasket.reduce((sum, el) => sum + el.price * el.quantity, 0);\n    },\n    getProductById: state => id => {\n      return state.products.find(el => el.id_product === id);\n    },\n    allProducts(state) {\n\n      return state.products;\n    },\n    featuredProducts(state) {\n      return state.products.filter((el) => el.id_product % 2 === 0)\n    },\n    mayLikeProducts(state) {\n      let position1 = Math.floor(Math.random() * state.products.length);\n      let position2 = position1 + 4;\n      return state.products.slice(position1, position2);\n    }\n\n  }\n});\n"]}]}